name: Zero-Trust Security Test with Istio + OPA

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  zero-trust-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Kubernetes tools
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          sudo apt-get update && sudo apt-get install -y kubectl jq
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Start Minikube
        run: |
          minikube start --driver=docker --memory=4096 --cpus=2
          kubectl get nodes

      - name: Install Istio CLI
        run: |
          curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.22.0 sh -
          sudo mv istio-1.22.0/bin/istioctl /usr/local/bin/
          istioctl version

      - name: Install Istio on Minikube
        run: |
          istioctl install --set profile=demo -y
          kubectl label namespace default istio-injection=enabled

      - name: Deploy Sample Application
        run: |
          kubectl apply -f manifests/namespace.yaml
          kubectl apply -f manifests/istio/istio-injection-label.yaml
          kubectl apply -f manifests/app/
          kubectl apply -f manifests/istio/

      - name: Wait for Minikube to be Ready
        run: kubectl get nodes

      - name: Wait for Frontend deployment
        run: |
          echo "Waiting for 'frontend' deployment to be available..."
          kubectl get deployment frontend -n frontend || (echo "❌ Deployment 'frontend' not found!" && exit 1)
          kubectl wait --for=condition=available --timeout=300s deployment/frontend -n frontend

      - name: Wait for Backend deployment
        run: |
          echo "Waiting for 'backend' deployment to be available..."
          kubectl get deployment backend -n backend || (echo "❌ Deployment 'backend' not found!" && exit 1)
          kubectl wait --for=condition=available --timeout=300s deployment/backend -n backend

      - name: Add and Update Helm Repos
        run: |
          helm repo add gatekeeper https://open-policy-agent.github.io/gatekeeper/charts
          helm repo update

      - name: Install OPA Gatekeeper
        run: |
          helm upgrade --install gatekeeper gatekeeper/gatekeeper \
            --namespace gatekeeper-system \
            --create-namespace \
            --wait \
            --timeout 300s

      - name: Apply OPA Policies
        run: |
          kubectl apply -f policies/templates/
          kubectl apply -f policies/deny-all.yaml
          kubectl apply -f policies/allow-frontend-to-backend.yaml || true

      - name: Run Test Scripts
        run: bash scripts/test_policy.sh

      - name: Collect Policy Violations
        run: |
          echo "# SECURITY-REPORT.md" > SECURITY-REPORT.md
          echo "\n## Violations:" >> SECURITY-REPORT.md
          kubectl get constraintviolations.constraints.gatekeeper.sh -A -o json | jq '.' >> SECURITY-REPORT.md

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: zero-trust-security-report
          path: SECURITY-REPORT.md

      - name: Update README with Security Summary
        run: |
          SUMMARY_CONTENT=$(cat SECURITY-REPORT.md)
          # Escape special characters for sed
          ESCAPED_SUMMARY=$(echo "$SUMMARY_CONTENT" | sed -e 's/[\/&]/\\&/g')
          sed -i "/<!-- SECURITY_SUMMARY_START -->/,/<!-- SECURITY_SUMMARY_END -->/c\\<!-- SECURITY_SUMMARY_START -->\\n${ESCAPED_SUMMARY}\\n<!-- SECURITY_SUMMARY_END -->" README.md

      - name: Commit updated README
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git diff --quiet && git diff --staged --quiet || git commit -m "Docs: Update security summary in README.md"

      - name: Upload Full Logs & Manifests
        uses: actions/upload-artifact@v4
        with:
          name: deployment-logs
          path: |
            manifests/
            policies/
            scripts/

      - name: Stop Minikube
        if: always()
        run: minikube delete